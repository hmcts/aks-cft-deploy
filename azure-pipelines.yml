name: HMCTS CFT AKS Azure Infrastructure Deployment Pipeline

trigger: none

pool:
  vmImage: 'ubuntu-latest'

parameters:

  - name: Action
    displayName: Action
    type: string
    default: 'Plan'
    values:
    - Plan
    - Apply
    - Destroy

  - name: cluster
    displayName: Cluster
    type: string
    default: 'All'
    values:
    - 'All'
    - '00'
    - '01'

  - name: location
    displayName: Location
    type: string
    default: 'UK South'
    values:
    - 'UK South'
    - 'UK West'

  - name: env
    displayName: Environment
    type: string
    default: 'DEMO'
    values:
    - ITHC
    - PREVIEW
    - DEMO
    - SBOX
    - PERFTEST
    - AAT
    - PTLSBOX
    - PTL
    # - PROD

variables:
  - name: tfversion
    value: 1.0.10
  - name: project
    value: cft
  - name: serviceConnection
    ${{ if eq( parameters['env'], 'perftest') }}: 
      value: "OPS-APPROVAL-GATE-TEST-ENVS"
    ${{ if eq( parameters['env'], 'preview') }}: 
      value: "OPS-APPROVAL-GATE-DEV-ENVS"
    ${{ if eq( parameters['env'], 'aat' ) }}: 
      value: "OPS-APPROVAL-GATE-STG-ENVS"
    ${{ if eq( parameters['env'], 'ptlsbox' ) }}: 
      value: "DTS-CFTSBOX-INTSVC"
    ${{ if eq( parameters['env'], 'ptl' ) }}: 
      value: "DTS-CFTPTL-INTSVC"
    ${{ if eq( parameters['env'], 'demo' ) }}: 
      value: "OPS-APPROVAL-GATE-DEMO-ENVS"
    ${{ if notIn( parameters['env'], 'aat', 'perftest', 'ptlsbox', 'preview', 'ptl', 'demo') }}: 
      value: "OPS-APPROVAL-GATE-${{ parameters.env }}-ENVS"
  - name: tfInitSub
    value: "04d27a32-7a07-48b3-95b8-3c8691e1a263"
  - name: isMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  - name: product
    value: 'cft-platform'
  - name: action
    value: ${{ parameters.Action }}

stages:

  - stage: PreChecks
    displayName: 'PreChecks'
    jobs:
      - job: PreChecks
        steps:
          - template: pipeline-steps/terraform-precheck.yaml
            parameters:
              keyvaultName: infra-vault-nonprod
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: azurerm-sandbox

  - stage: Genesis
    displayName: 'Genesis'
    condition: ne('${{ parameters.Action }}', 'Destroy')
    jobs:
      - job: Genesis
        steps:
          - template: pipeline-steps/genesis.yaml
            parameters:
              environment: ${{ parameters.env }}
              location: ${{ parameters.location }}
              stack: 'genesis'
              project: $(project)
              tfversion: $(tfversion)
              tfInitSub: ${{ variables.tfInitSub }}
              builtFrom: $(Build.Repository.Name)
              product: ${{ variables.product }}

  - stage: Network
    displayName: 'Network'
    condition: ne('${{ parameters.Action }}', 'Destroy')
    jobs:
      - job: NetworkRg
        steps:
          - template: pipeline-steps/deploy-service.yaml
            parameters:
              environment: ${{ parameters.env }}
              location: ${{ parameters.location }}
              stack: 'network-rg'
              project: $(project)
              tfversion: $(tfversion)
              tfInitSub: ${{ variables.tfInitSub }}
              builtFrom: $(Build.Repository.Name)
              product: ${{ variables.product }}
      - job: DeployInfrastructure
        dependsOn: NetworkRg
        steps:
          - template: pipeline-steps/deploy-network.yaml
            parameters:
              environment: ${{ parameters.env }}
              location: ${{ parameters.location }}
              stack: 'network'
              project: $(project)
              tfversion: $(tfversion)
              terraformServiceConnection: OPS-APPROVAL-GATE-MGMT-ENVS-CNP #OPS-APPROVAL-GATE-MGMT-ENVS
              tfInitSub: ${{ variables.tfInitSub }}
              builtFrom: $(Build.Repository.Name)
              product: ${{ variables.product }}

  - stage: Managed_Identity
    displayName: 'Managed_Identity'
    condition: ne('${{ parameters.Action }}', 'Destroy')
    dependsOn: Network
    jobs:
      - job: Managed_Identity
        steps:
          - template: pipeline-steps/managed_identity.yaml
            parameters:
              serviceConnection: $(serviceConnection)
              environment: ${{ parameters.env }}
              location: ${{ parameters.location }}
              stack: 'managed-identity'
              project: $(project)
              tfversion: $(tfversion)
              tfInitSub: ${{ variables.tfInitSub }}
              builtFrom: $(Build.Repository.Name)
              product: ${{ variables.product }}

  - stage: Aks
    displayName: 'Deploy AKS clusters'
    condition: ne('${{ parameters.Action }}', 'Destroy')
    dependsOn:
      - Managed_Identity
    jobs:
      - job: DeployInfrastructure
        steps:
          - template: pipeline-steps/deploy-service.yaml
            parameters:
              environment: ${{ parameters.env }}
              location: ${{ parameters.location }}
              stack: 'aks'
              project: $(project)
              tfversion: $(tfversion)
              tfInitSub: ${{ variables.tfInitSub }}
              builtFrom: $(Build.Repository.Name)
              product: ${{ variables.product }}
              ${{ if ne(parameters['cluster'], 'All') }}:
                targetCommand: "-target azurerm_role_assignment.uami_cft_rg_identity_operator[${{parameters.cluster}}] -target azurerm_resource_group.kubernetes_resource_group[${{parameters.cluster}}] -target module.kubernetes[${{parameters.cluster}}]"

  - stage: BootStrapClusters
    displayName: 'BootStrap Clusters'
    dependsOn: Aks
    jobs:
      - job: BootStrap
        variables:
          ${{ if eq(parameters['cluster'], 'All') }}:
            clusters: $[ stageDependencies.Aks.DeployInfrastructure.outputs['setClusterNumbers.clusterNumbers'] ]
          ${{ if ne(parameters['cluster'], 'All') }}:
            clusters: ${{ parameters.cluster }}
        steps:
          - template: pipeline-steps/bootstrap.yaml
            parameters:
              environment: ${{ parameters.env }}
              project: $(project)
              serviceConnection: $(serviceConnection)
              ${{ if eq( parameters['env'], 'perftest') }}:
                akskeyvault: "dcdcftappstestkv"
              ${{ if eq( parameters['env'], 'aat' ) }}: 
                akskeyvault: "dcdcftappsstgkv"
              ${{ if eq( parameters['env'], 'ptlsbox' ) }}: 
                akskeyvault: "dtscftptlsbox"
              ${{ if eq( parameters['env'], 'ptl' ) }}: 
                akskeyvault: "dtscftptl"
              ${{ if eq( parameters['env'], 'preview' ) }}: 
                akskeyvault: "dcdcftappsdevkv"
              ${{ if eq( parameters['env'], 'demo' ) }}: 
                akskeyvault: "dcdcftappsdemokv"
              ${{ if notIn( parameters['env'], 'aat', 'perftest', 'ptlsbox', 'ptl', 'preview', 'demo') }}: 
                akskeyvault: dcdcftapps${{ parameters.env }}kv
              GenerateSealedSecrets: false

  - stage: DestroyAks
    displayName: 'Destroy AKS Infrastructure'
    condition: contains('${{ parameters.Action }}', 'Destroy')
    jobs:
      - job: DestroyInfrastructure
        steps:
          - template: pipeline-steps/destroy-service.yaml
            parameters:
              environment: ${{ parameters.env }}
              location: ${{ parameters.location }}
              stack: 'aks'
              project: $(project)
              tfversion: $(tfversion)
              tfInitSub: ${{ variables.tfInitSub }}
              builtFrom: $(Build.Repository.Name)
              product: ${{ variables.product }}
              ${{ if ne(parameters['cluster'], 'All') }}:
                targetCommand: "-target azurerm_role_assignment.uami_cft_rg_identity_operator[${{parameters.cluster}}] -target module.kubernetes[${{parameters.cluster}}]"
