parameters:
  environment: ''
  project: ''
  akskeyvault: ''
  terraformSubscriptionID: ''

steps:
- checkout: self
- checkout: cnp-flux-config
- template: steps/keyvault-read.yaml@cnp-azuredevops-libraries
  parameters:
    serviceConnection: $(serviceConnection)
    environment: ${{ parameters.environment }}

- task: AzureCLI@1
  displayName: 'Setup Authentication'
  inputs:
      azureSubscription: $(serviceConnection)
      addSpnToEnvironment: true
      scriptLocation: inlineScript
      failOnStandardError: 'true'
      inlineScript: |
        if [[ "$(clusters)" == "All" ]]; then
          echo "Checking for available clusters"
          current_clusters=$(az aks list --output tsv --query '[].name')
          echo -e "Clusters found:\n${current_clusters}"
          for cluster in ${current_clusters}; do
            cluster_numbers=$(echo $cluster | sed -n "s/${{ parameters.project }}-${{ parameters.environment }}-\([0-9][0-9]\)-aks/\1/p" )
            echo -e "Cluster Numbers 1 are ${cluster_numbers}"
          done
        else
          cluster_numbers=$(clusters)
          echo -e "Cluster Numbers 2 are ${cluster_numbers}"
        fi
        echo "##vso[task.setvariable variable=AZURE_MI_ID]$(az identity show --resource-group genesis-rg --name aks-$(environment)-mi --query="clientId" -o tsv)"
        echo "##vso[task.setvariable variable=AKS_ISSUER_URL]$(az aks show -n cft-${{ parameters.environment }}-${cluster_numbers}-aks -g cft-${{ parameters.environment }}-${cluster_numbers}-rg --query "oidcIssuerProfile.issuerUrl" -otsv)"

- task: AzureKeyVault@1
  displayName: 'Get secrets from Keyvault'
  inputs:
    azureSubscription:  "DTS-CFTPTL-INTSVC"
    keyVaultName:   "cftptl-intsvc"
    secretsFilter: 'github-management-api-token'

- task: Bash@3
  displayName: 'Update flux-config'
  inputs:
    arguments: ${{ parameters.environment }} ${{ parameters.cluster }} $(AKS_ISSUER_URL) cnp-flux-config $(github-management-api-token)
    filePath: aks-cft-deploy/pipeline-scripts/update-issuer-url.sh

- task: AzureCLI@1
  displayName: 'Bootstrap'
  inputs:
    azureSubscription: $(serviceConnection)
    addSpnToEnvironment: true
    scriptType: shell
    failOnStandardError: 'false'
    scriptPath: aks-cft-deploy/bootstrap/bootstrap.sh
    arguments: ${{ parameters.project }} aks $(env) $(controlKeyVault) $(serviceConnection) "$(clusters)" deploy ${{ parameters.akskeyvault }} ${{parameters.terraformSubscriptionID}}