parameters:
  environment: ''
  project: ''
  akskeyvault: ''
  terraformSubscriptionID: ''

steps:
- checkout: self
- checkout: cnp-flux-config
- template: steps/keyvault-read.yaml@cnp-azuredevops-libraries
  parameters:
    serviceConnection: ${{ parameters.serviceConnection }}
    environment: ${{ parameters.environment }}

- task: AzureCLI@1
  displayName: 'Setup Authentication'
  inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      addSpnToEnvironment: true
      scriptLocation: inlineScript
      failOnStandardError: 'true'
      inlineScript: |
        echo "##vso[task.setvariable variable=AZURE_MI_ID]$(az identity show --resource-group genesis-rg --name aks-${{ parameters.environment }}-mi --query="clientId" -o tsv)"

        if [[ "$(clusters)" != "All" ]]; then
          echo "##vso[task.setvariable variable=AKS_ISSUER_URL]$(az aks show -n cft-${{ parameters.environment }}-$(clusters)-aks -g cft-${{ parameters.environment }}-$(clusters)-rg --query "oidcIssuerProfile.issuerUrl" -otsv)"
        fi

- task: AzureKeyVault@1
  displayName: 'Get secrets from Keyvault'
  inputs:
    azureSubscription:  "DTS-CFTPTL-INTSVC"
    keyVaultName:   "cftptl-intsvc"
    secretsFilter: 'github-management-api-token'

- task: Bash@3
  displayName: 'Update flux-config'
  inputs:
    arguments: ${{ parameters.environment }} ${{ parameters.cluster }} $(AKS_ISSUER_URL) cnp-flux-config $(github-management-api-token)
    filePath: aks-cft-deploy/pipeline-scripts/update-issuer-url.sh
  condition: ne('${{ parameters.cluster }}', 'All')

- task: AzureCLI@1
  displayName: 'Bootstrap'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    addSpnToEnvironment: true
    scriptType: shell
    failOnStandardError: 'false'
    scriptPath: aks-cft-deploy/bootstrap/bootstrap.sh
    arguments: ${{ parameters.project }} aks $(env) $(controlKeyVault) ${{ parameters.serviceConnection }} "$(clusters)" deploy ${{ parameters.akskeyvault }} ${{parameters.terraformSubscriptionID}}