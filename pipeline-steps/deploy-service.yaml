parameters:
  environment: ""
  location: ""
  stack: ""
  project: ""
  tfvars: ""
  serviceConnection: ""
  tfInitSub: ""
  targetCommand: ""
  setClusterNumbersEnvVar: false
<<<<<<< HEAD
  action: ''
  terraformSubscriptionID: ''
  backendAzureRmResourceGroupName: ''
=======
  action: ""
  terraformSubscriptionID: ""
  backendAzureRmResourceGroupName: ""
>>>>>>> 9a9bf191afd9185750d4c575d7b03bb78454749a

steps:
  - template: steps/terraform.yaml@cnp-azuredevops-libraries
    parameters:
      overrideAction: "${{ parameters.action }}"
      environment: ${{ parameters.environment }}
      component: ${{ parameters.stack }}
      location: ${{ parameters.location }}
      serviceConnection: ${{ parameters.serviceConnection }}
      terraformInitSubscription: ${{ parameters.tfInitSub }}
      product: ${{ parameters.product }}
      tfVarsFile: "$(System.DefaultWorkingDirectory)/$(buildRepoSuffix)/environments/${{ parameters.stack }}/${{ parameters.environment }}.tfvars"
      initCommandOptions: >
        -var subscription_id=${{ parameters.terraformSubscriptionID }}
        -backend-config resource_group_name=${{ parameters.backendAzureRmResourceGroupName }}
      planCommandOptions: "-var subscription_id=${{ parameters.terraformSubscriptionID }} -var control_vault=$(controlKeyVault) -var project=$(project) ${{ parameters.targetCommand }}"
<<<<<<< HEAD
      
=======

>>>>>>> 9a9bf191afd9185750d4c575d7b03bb78454749a
  - ${{ if eq(parameters.setClusterNumbersEnvVar, true) }}:
      - pwsh: |
          $tfVersion = Get-Content "$(System.DefaultWorkingDirectory)/$(buildRepoSuffix)/.terraform-version" -Raw
          Write-Host "##vso[task.setvariable variable=tfVersion]$tfVersion"
        displayName: Set terraform version env variable

      - task: TerraformCLI@0
        displayName: Terraform output
        inputs:
          command: output
          terraformVersion: $(tfVersion)
          workingDirectory: $(System.DefaultWorkingDirectory)/$(buildRepoSuffix)/components/${{ parameters.stack }}
          environmentServiceName: ${{ parameters.serviceConnection }}

      - script: |
          echo "Setting clusterNumbers variable to $clusters"
          echo "##vso[task.setvariable variable=clusterNumbers;isOutput=true]$clusters"
        name: setClusterNumbers
        env:
          clusters: $(TF_OUT_CLUSTERS)
